//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BethesdaMVCEConsentForms.EConsentServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Treatment", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class Treatment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool _IsAutologousUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool _IsDirectedUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool _IsStatementOfConsentAcceptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _consentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaMVCEConsentForms.EConsentServices.ConsentType _consentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaMVCEConsentForms.EConsentServices.DoctorAndProcedure[] _doctorAndPrceduresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool _isPatientUnableSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _patientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaMVCEConsentForms.EConsentServices.Physican _physicanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _proceduresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaMVCEConsentForms.EConsentServices.Signatures[] _signaturesesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaMVCEConsentForms.EConsentServices.TrackingInformation _trackingInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _translatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _unableToSignReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool _IsAutologousUnits {
            get {
                return this._IsAutologousUnitsField;
            }
            set {
                if ((this._IsAutologousUnitsField.Equals(value) != true)) {
                    this._IsAutologousUnitsField = value;
                    this.RaisePropertyChanged("_IsAutologousUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool _IsDirectedUnits {
            get {
                return this._IsDirectedUnitsField;
            }
            set {
                if ((this._IsDirectedUnitsField.Equals(value) != true)) {
                    this._IsDirectedUnitsField = value;
                    this.RaisePropertyChanged("_IsDirectedUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool _IsStatementOfConsentAccepted {
            get {
                return this._IsStatementOfConsentAcceptedField;
            }
            set {
                if ((this._IsStatementOfConsentAcceptedField.Equals(value) != true)) {
                    this._IsStatementOfConsentAcceptedField = value;
                    this.RaisePropertyChanged("_IsStatementOfConsentAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _consentID {
            get {
                return this._consentIDField;
            }
            set {
                if ((this._consentIDField.Equals(value) != true)) {
                    this._consentIDField = value;
                    this.RaisePropertyChanged("_consentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaMVCEConsentForms.EConsentServices.ConsentType _consentType {
            get {
                return this._consentTypeField;
            }
            set {
                if ((this._consentTypeField.Equals(value) != true)) {
                    this._consentTypeField = value;
                    this.RaisePropertyChanged("_consentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaMVCEConsentForms.EConsentServices.DoctorAndProcedure[] _doctorAndPrcedures {
            get {
                return this._doctorAndPrceduresField;
            }
            set {
                if ((object.ReferenceEquals(this._doctorAndPrceduresField, value) != true)) {
                    this._doctorAndPrceduresField = value;
                    this.RaisePropertyChanged("_doctorAndPrcedures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool _isPatientUnableSign {
            get {
                return this._isPatientUnableSignField;
            }
            set {
                if ((this._isPatientUnableSignField.Equals(value) != true)) {
                    this._isPatientUnableSignField = value;
                    this.RaisePropertyChanged("_isPatientUnableSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _patientId {
            get {
                return this._patientIdField;
            }
            set {
                if ((object.ReferenceEquals(this._patientIdField, value) != true)) {
                    this._patientIdField = value;
                    this.RaisePropertyChanged("_patientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaMVCEConsentForms.EConsentServices.Physican _physican {
            get {
                return this._physicanField;
            }
            set {
                if ((object.ReferenceEquals(this._physicanField, value) != true)) {
                    this._physicanField = value;
                    this.RaisePropertyChanged("_physican");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _procedures {
            get {
                return this._proceduresField;
            }
            set {
                if ((object.ReferenceEquals(this._proceduresField, value) != true)) {
                    this._proceduresField = value;
                    this.RaisePropertyChanged("_procedures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaMVCEConsentForms.EConsentServices.Signatures[] _signatureses {
            get {
                return this._signaturesesField;
            }
            set {
                if ((object.ReferenceEquals(this._signaturesesField, value) != true)) {
                    this._signaturesesField = value;
                    this.RaisePropertyChanged("_signatureses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaMVCEConsentForms.EConsentServices.TrackingInformation _trackingInformation {
            get {
                return this._trackingInformationField;
            }
            set {
                if ((object.ReferenceEquals(this._trackingInformationField, value) != true)) {
                    this._trackingInformationField = value;
                    this.RaisePropertyChanged("_trackingInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _translatedBy {
            get {
                return this._translatedByField;
            }
            set {
                if ((object.ReferenceEquals(this._translatedByField, value) != true)) {
                    this._translatedByField = value;
                    this.RaisePropertyChanged("_translatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _unableToSignReason {
            get {
                return this._unableToSignReasonField;
            }
            set {
                if ((object.ReferenceEquals(this._unableToSignReasonField, value) != true)) {
                    this._unableToSignReasonField = value;
                    this.RaisePropertyChanged("_unableToSignReason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Physican", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class Physican : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AssociatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryDoctorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Associated {
            get {
                return this.AssociatedField;
            }
            set {
                if ((this.AssociatedField.Equals(value) != true)) {
                    this.AssociatedField = value;
                    this.RaisePropertyChanged("Associated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsentTypeID {
            get {
                return this.ConsentTypeIDField;
            }
            set {
                if ((this.ConsentTypeIDField.Equals(value) != true)) {
                    this.ConsentTypeIDField = value;
                    this.RaisePropertyChanged("ConsentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FName {
            get {
                return this.FNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FNameField, value) != true)) {
                    this.FNameField = value;
                    this.RaisePropertyChanged("FName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LName {
            get {
                return this.LNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LNameField, value) != true)) {
                    this.LNameField = value;
                    this.RaisePropertyChanged("LName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((this.PCIDField.Equals(value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrimaryDoctor {
            get {
                return this.PrimaryDoctorField;
            }
            set {
                if ((this.PrimaryDoctorField.Equals(value) != true)) {
                    this.PrimaryDoctorField = value;
                    this.RaisePropertyChanged("PrimaryDoctor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackingInformation", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class TrackingInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _deviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _iPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _device {
            get {
                return this._deviceField;
            }
            set {
                if ((object.ReferenceEquals(this._deviceField, value) != true)) {
                    this._deviceField = value;
                    this.RaisePropertyChanged("_device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _iP {
            get {
                return this._iPField;
            }
            set {
                if ((object.ReferenceEquals(this._iPField, value) != true)) {
                    this._iPField = value;
                    this.RaisePropertyChanged("_iP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsentType", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    public enum ConsentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Surgical = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cardiovascular = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutsideOR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Endoscopy = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BloodConsentOrRefusal = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlasmanApheresis = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PICC = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorAndProcedure", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class DoctorAndProcedure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _preceduresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _primaryDoctorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _precedures {
            get {
                return this._preceduresField;
            }
            set {
                if ((object.ReferenceEquals(this._preceduresField, value) != true)) {
                    this._preceduresField = value;
                    this.RaisePropertyChanged("_precedures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _primaryDoctorId {
            get {
                return this._primaryDoctorIdField;
            }
            set {
                if ((object.ReferenceEquals(this._primaryDoctorIdField, value) != true)) {
                    this._primaryDoctorIdField = value;
                    this.RaisePropertyChanged("_primaryDoctorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Signatures", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class Signatures : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _signatureContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaMVCEConsentForms.EConsentServices.SignatureType _signatureTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _name {
            get {
                return this._nameField;
            }
            set {
                if ((object.ReferenceEquals(this._nameField, value) != true)) {
                    this._nameField = value;
                    this.RaisePropertyChanged("_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _signatureContent {
            get {
                return this._signatureContentField;
            }
            set {
                if ((object.ReferenceEquals(this._signatureContentField, value) != true)) {
                    this._signatureContentField = value;
                    this.RaisePropertyChanged("_signatureContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaMVCEConsentForms.EConsentServices.SignatureType _signatureType {
            get {
                return this._signatureTypeField;
            }
            set {
                if ((this._signatureTypeField.Equals(value) != true)) {
                    this._signatureTypeField = value;
                    this.RaisePropertyChanged("_signatureType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureType", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    public enum SignatureType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoctorSign1 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoctorSign2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoctorSign3 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoctorSign4 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoctorSign5 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoctorSign6 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoctorSign7 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PatientSign = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PatientAuthorizeSign = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WitnessSignature1 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WitnessSignature2 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PICCSignature = 11,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientDetail", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class PatientDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AdmDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociatedDoctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttnDrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MRHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryDoctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcedureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BethesdaMVCEConsentForms.EConsentServices.StatementOfConsent StatementOfConsentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranslatedbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnableToSignReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AdmDate {
            get {
                return this.AdmDateField;
            }
            set {
                if ((this.AdmDateField.Equals(value) != true)) {
                    this.AdmDateField = value;
                    this.RaisePropertyChanged("AdmDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociatedDoctorId {
            get {
                return this.AssociatedDoctorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociatedDoctorIdField, value) != true)) {
                    this.AssociatedDoctorIdField = value;
                    this.RaisePropertyChanged("AssociatedDoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttnDr {
            get {
                return this.AttnDrField;
            }
            set {
                if ((object.ReferenceEquals(this.AttnDrField, value) != true)) {
                    this.AttnDrField = value;
                    this.RaisePropertyChanged("AttnDr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MRHash {
            get {
                return this.MRHashField;
            }
            set {
                if ((object.ReferenceEquals(this.MRHashField, value) != true)) {
                    this.MRHashField = value;
                    this.RaisePropertyChanged("MRHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientHash {
            get {
                return this.PatientHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientHashField, value) != true)) {
                    this.PatientHashField = value;
                    this.RaisePropertyChanged("PatientHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryDoctorId {
            get {
                return this.PrimaryDoctorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryDoctorIdField, value) != true)) {
                    this.PrimaryDoctorIdField = value;
                    this.RaisePropertyChanged("PrimaryDoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcedureName {
            get {
                return this.ProcedureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureNameField, value) != true)) {
                    this.ProcedureNameField = value;
                    this.RaisePropertyChanged("ProcedureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BethesdaMVCEConsentForms.EConsentServices.StatementOfConsent StatementOfConsent {
            get {
                return this.StatementOfConsentField;
            }
            set {
                if ((object.ReferenceEquals(this.StatementOfConsentField, value) != true)) {
                    this.StatementOfConsentField = value;
                    this.RaisePropertyChanged("StatementOfConsent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Translatedby {
            get {
                return this.TranslatedbyField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslatedbyField, value) != true)) {
                    this.TranslatedbyField = value;
                    this.RaisePropertyChanged("Translatedby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnableToSignReason {
            get {
                return this.UnableToSignReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.UnableToSignReasonField, value) != true)) {
                    this.UnableToSignReasonField = value;
                    this.RaisePropertyChanged("UnableToSignReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatementOfConsent", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class StatementOfConsent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutologousUnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DirectedUnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutologousUnits {
            get {
                return this.AutologousUnitsField;
            }
            set {
                if ((this.AutologousUnitsField.Equals(value) != true)) {
                    this.AutologousUnitsField = value;
                    this.RaisePropertyChanged("AutologousUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DirectedUnits {
            get {
                return this.DirectedUnitsField;
            }
            set {
                if ((this.DirectedUnitsField.Equals(value) != true)) {
                    this.DirectedUnitsField = value;
                    this.RaisePropertyChanged("DirectedUnits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorDetails", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class DoctorDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fname {
            get {
                return this.FnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FnameField, value) != true)) {
                    this.FnameField = value;
                    this.RaisePropertyChanged("Fname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lname {
            get {
                return this.LnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LnameField, value) != true)) {
                    this.LnameField = value;
                    this.RaisePropertyChanged("Lname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssociatedDoctorDetails", Namespace="http://schemas.datacontract.org/2004/07/BethesdaConsentFormWCFSvc")]
    [System.SerializableAttribute()]
    public partial class AssociatedDoctorDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fname {
            get {
                return this.FnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FnameField, value) != true)) {
                    this.FnameField = value;
                    this.RaisePropertyChanged("Fname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lname {
            get {
                return this.LnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LnameField, value) != true)) {
                    this.LnameField = value;
                    this.RaisePropertyChanged("Lname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EConsentServices.ConsentFormSvc")]
    public interface ConsentFormSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/AddTreatment", ReplyAction="http://tempuri.org/ConsentFormSvc/AddTreatmentResponse")]
        void AddTreatment(BethesdaMVCEConsentForms.EConsentServices.Treatment treatment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetTreatment", ReplyAction="http://tempuri.org/ConsentFormSvc/GetTreatmentResponse")]
        BethesdaMVCEConsentForms.EConsentServices.Treatment GetTreatment(string patientId, BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetPatientSignature", ReplyAction="http://tempuri.org/ConsentFormSvc/GetPatientSignatureResponse")]
        string GetPatientSignature(string patientId, BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType, BethesdaMVCEConsentForms.EConsentServices.SignatureType signatureType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/DeleteTables", ReplyAction="http://tempuri.org/ConsentFormSvc/DeleteTablesResponse")]
        void DeleteTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetPatientDetail", ReplyAction="http://tempuri.org/ConsentFormSvc/GetPatientDetailResponse")]
        BethesdaMVCEConsentForms.EConsentServices.PatientDetail GetPatientDetail(string patientNumber, string ConsentFormType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetPatientfromLocation", ReplyAction="http://tempuri.org/ConsentFormSvc/GetPatientfromLocationResponse")]
        System.Data.DataTable GetPatientfromLocation(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GenerateAndUploadPDFtoSharePoint", ReplyAction="http://tempuri.org/ConsentFormSvc/GenerateAndUploadPDFtoSharePointResponse")]
        void GenerateAndUploadPDFtoSharePoint(string RelativeUrl, string PatientId, BethesdaMVCEConsentForms.EConsentServices.ConsentType ConsentFormType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetProcedures", ReplyAction="http://tempuri.org/ConsentFormSvc/GetProceduresResponse")]
        System.Data.DataTable GetProcedures(BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetConsentTypes", ReplyAction="http://tempuri.org/ConsentFormSvc/GetConsentTypesResponse")]
        System.Data.DataTable GetConsentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/AddProcedures", ReplyAction="http://tempuri.org/ConsentFormSvc/AddProceduresResponse")]
        void AddProcedures(string procedureName, int consentTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/UpdateProcedureName", ReplyAction="http://tempuri.org/ConsentFormSvc/UpdateProcedureNameResponse")]
        void UpdateProcedureName(string procedureName, int procedureID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/DeleteProcedure", ReplyAction="http://tempuri.org/ConsentFormSvc/DeleteProcedureResponse")]
        void DeleteProcedure(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/ListProcedures", ReplyAction="http://tempuri.org/ConsentFormSvc/ListProceduresResponse")]
        string[] ListProcedures(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetDoctorDetails", ReplyAction="http://tempuri.org/ConsentFormSvc/GetDoctorDetailsResponse")]
        BethesdaMVCEConsentForms.EConsentServices.DoctorDetails[] GetDoctorDetails(BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetDoctorDetail", ReplyAction="http://tempuri.org/ConsentFormSvc/GetDoctorDetailResponse")]
        BethesdaMVCEConsentForms.EConsentServices.DoctorDetails GetDoctorDetail(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetAssociatedDoctors", ReplyAction="http://tempuri.org/ConsentFormSvc/GetAssociatedDoctorsResponse")]
        BethesdaMVCEConsentForms.EConsentServices.AssociatedDoctorDetails[] GetAssociatedDoctors(int primaryDoctorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/SavePdFFolderPath", ReplyAction="http://tempuri.org/ConsentFormSvc/SavePdFFolderPathResponse")]
        void SavePdFFolderPath(BethesdaMVCEConsentForms.EConsentServices.ConsentType consenttype, string FolderPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/GetPdFFolderPath", ReplyAction="http://tempuri.org/ConsentFormSvc/GetPdFFolderPathResponse")]
        string GetPdFFolderPath(BethesdaMVCEConsentForms.EConsentServices.ConsentType consenttype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsentFormSvc/IsValidEmployee", ReplyAction="http://tempuri.org/ConsentFormSvc/IsValidEmployeeResponse")]
        bool IsValidEmployee(string EmpID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConsentFormSvcChannel : BethesdaMVCEConsentForms.EConsentServices.ConsentFormSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsentFormSvcClient : System.ServiceModel.ClientBase<BethesdaMVCEConsentForms.EConsentServices.ConsentFormSvc>, BethesdaMVCEConsentForms.EConsentServices.ConsentFormSvc {
        
        public ConsentFormSvcClient() {
        }
        
        public ConsentFormSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsentFormSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsentFormSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsentFormSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddTreatment(BethesdaMVCEConsentForms.EConsentServices.Treatment treatment) {
            base.Channel.AddTreatment(treatment);
        }
        
        public BethesdaMVCEConsentForms.EConsentServices.Treatment GetTreatment(string patientId, BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType) {
            return base.Channel.GetTreatment(patientId, consentType);
        }
        
        public string GetPatientSignature(string patientId, BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType, BethesdaMVCEConsentForms.EConsentServices.SignatureType signatureType) {
            return base.Channel.GetPatientSignature(patientId, consentType, signatureType);
        }
        
        public void DeleteTables() {
            base.Channel.DeleteTables();
        }
        
        public BethesdaMVCEConsentForms.EConsentServices.PatientDetail GetPatientDetail(string patientNumber, string ConsentFormType) {
            return base.Channel.GetPatientDetail(patientNumber, ConsentFormType);
        }
        
        public System.Data.DataTable GetPatientfromLocation(string location) {
            return base.Channel.GetPatientfromLocation(location);
        }
        
        public void GenerateAndUploadPDFtoSharePoint(string RelativeUrl, string PatientId, BethesdaMVCEConsentForms.EConsentServices.ConsentType ConsentFormType) {
            base.Channel.GenerateAndUploadPDFtoSharePoint(RelativeUrl, PatientId, ConsentFormType);
        }
        
        public System.Data.DataTable GetProcedures(BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType) {
            return base.Channel.GetProcedures(consentType);
        }
        
        public System.Data.DataTable GetConsentTypes() {
            return base.Channel.GetConsentTypes();
        }
        
        public void AddProcedures(string procedureName, int consentTypeID) {
            base.Channel.AddProcedures(procedureName, consentTypeID);
        }
        
        public void UpdateProcedureName(string procedureName, int procedureID) {
            base.Channel.UpdateProcedureName(procedureName, procedureID);
        }
        
        public void DeleteProcedure(int Id) {
            base.Channel.DeleteProcedure(Id);
        }
        
        public string[] ListProcedures(string Name) {
            return base.Channel.ListProcedures(Name);
        }
        
        public BethesdaMVCEConsentForms.EConsentServices.DoctorDetails[] GetDoctorDetails(BethesdaMVCEConsentForms.EConsentServices.ConsentType consentType) {
            return base.Channel.GetDoctorDetails(consentType);
        }
        
        public BethesdaMVCEConsentForms.EConsentServices.DoctorDetails GetDoctorDetail(int ID) {
            return base.Channel.GetDoctorDetail(ID);
        }
        
        public BethesdaMVCEConsentForms.EConsentServices.AssociatedDoctorDetails[] GetAssociatedDoctors(int primaryDoctorID) {
            return base.Channel.GetAssociatedDoctors(primaryDoctorID);
        }
        
        public void SavePdFFolderPath(BethesdaMVCEConsentForms.EConsentServices.ConsentType consenttype, string FolderPath) {
            base.Channel.SavePdFFolderPath(consenttype, FolderPath);
        }
        
        public string GetPdFFolderPath(BethesdaMVCEConsentForms.EConsentServices.ConsentType consenttype) {
            return base.Channel.GetPdFFolderPath(consenttype);
        }
        
        public bool IsValidEmployee(string EmpID) {
            return base.Channel.IsValidEmployee(EmpID);
        }
    }
}
